[tool.poetry]
name = "saq"
version = "0.9.4"
authors = ["Toby Mao <toby.mao@gmail.com>"]
license = "MIT"
description = "Distributed Python job queue with asyncio and redis"
homepage = "https://github.com/tobymao/saq"
documentation = "https://github.com/tobymao/saq"
repository = "https://github.com/tobymao/saq"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: OS Independent",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Systems Administration",
]

[build-system]
requires = ["poetry-core>=1.2"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.8"
redis = ">=4.2, <5.0"
croniter = ">=0.3.18"

[tool.poetry.group.hiredis.dependencies]
hiredis = ">=2.2"

[tool.poetry.group.web.dependencies]
aiohttp = "^3.8"
aiohttp_basicauth = "^1.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3"
pylint = "^2.17"
mypy = "^1.1"
poethepoet = "^0.19.0"

[tool.poetry.group.typing.dependencies]
types-croniter = "^1.3.2"
types-redis = "^4.5.4"
types-setuptools = "^67.6.0"

[tool.mypy]
show_error_codes = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
python_version = "3.8"
exclude = ["examples", "benchmarks", "docs"]

[tool.pylint]
disable = [
    "attribute-defined-outside-init",
    "broad-except",
    "cyclic-import",
    "import-outside-toplevel",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "no-self-argument",
    "too-few-public-methods",
    "too-many-lines",
    "too-many-public-methods",
    "too-many-instance-attributes",
    "too-many-return-statements",
    "unsubscriptable-object",
]
max-line-length = "150"

[tool.poe.tasks]
unittest = "poetry run python -m unittest discover -s tests"
black = "poetry run python -m black --check saq/ tests/"
pylint = "poetry run python -m pylint saq/ tests/"
mypy = "poetry run python -m mypy saq/ tests/"
clean = "rm -rf .mypy_cache ./**/__pycache__"
run_checks = ["pylint", "black", "mypy", "unittest"]