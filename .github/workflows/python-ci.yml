# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    services:
      redis:
        image: redis
        ports:
        - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Poetry
      run: pipx install poetry
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'poetry'
    - name: Upgrade pip
      run: |
        python -m pip install --no-warn-conflicts --upgrade pip

     #----------------------------------------------
     #       load cached venv if cache exists
     #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
     #----------------------------------------------
     # install your root project, if required
     #----------------------------------------------
    - name: Install dependancies
      run: poetry install --no-interaction
  
     #----------------------------------------------
     #              run test suite
     #----------------------------------------------
    - name: Run Checks
      run: |
        poetry run poe run_checks
